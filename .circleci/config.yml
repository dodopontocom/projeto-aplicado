version: 2.1

ambiente-producao: &ambiente-producao
    filters:
      branches:
        only:
          - master
ambiente-integracao: &ambiente-integracao
    filters:
      branches:
        only:
          - develop
jobs:
  GCP_Provisioning:
    working_directory: /root/app
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: "Provisionar infraestrutura com terraform - Part.1 - Criar VPC"
          command: |
          
            source ./.circleci/cicd-definitions.sh
            echo ${GCLOUD_SERVICE_ACCOUNT} > ${GCLOUD_JSON_KEY_PATH}
            cd ./cloud/terraform
            terraform init -backend-config="bucket=${GCLOUD_PROJECT_BUCKET_NAME}" -backend-config="prefix=${GCLOUD_PROJECT_BUCKET_PREFIX}"
            terraform plan
            terraform apply -auto-approve
  GCP_Provisioning_Integracao:
    working_directory: /root/app
    docker:
      - image: hashicorp/terraform:full
    steps:
      - checkout
      - run:
          name: "Infra Testes"
          command: |
          
            source ./.circleci/cicd-definitions.sh
            #Sobescrever variÃ¡veis referente ao ambiente - sabendo que Integracao = INT
            
            vars=($(printenv | egrep -o "INT_CI_.*=" | awk -F= '{print $1}'))
            for var in "${vars[@]}"; do  
              var=$(echo "${var}" | awk -F '=' '{print $1}')
              new_var=$(echo "${var}" | cut -d'_' -f3-)
              export "${new_var}"="${!var}"            
            done
            
            echo ${GCLOUD_SERVICE_ACCOUNT} > ${GCLOUD_JSON_KEY_PATH}
            cd ./cloud/terraform
            terraform init -backend-config="bucket=${GCLOUD_PROJECT_BUCKET_NAME}" -backend-config="prefix=${GCLOUD_PROJECT_BUCKET_PREFIX}"
            terraform plan
            

workflows:
  version: 2.1
  
  gcloud_workflow:
    jobs:
      - GCP_Provisioning:
          <<: *ambiente-producao
      - GCP_Provisioning_Integracao:
          <<: *ambiente-integracao